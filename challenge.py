# -*- coding: utf-8 -*-
"""challenge.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CvSsgwzCJ5aT5zpZobTExaa0ZpBAecOt
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

#import and read file cell

df = pd.read_csv('/content/train.csv')
df.describe()

# Dropping certain less important features (all of them are important to check the statu)

print(df.shape)
print(list(df.columns))



# To view the columns with missing values
print('Feature name      ||      Total missing values')
df.isnull().sum().sort_values(ascending=False)/df.shape[0]

# get seperate our dataset and make X(inputs) and y (target variable)
# Splitting the dataset into Train and Test sets
from sklearn.model_selection import train_test_split

features = ['id', 'no_of_adults', 'no_of_children', 'no_of_weekend_nights', 'no_of_week_nights', 'type_of_meal_plan', 'required_car_parking_space', 'room_type_reserved', 'lead_time', 'arrival_year', 'arrival_month', 'arrival_date', 'market_segment_type', 'repeated_guest', 'no_of_previous_cancellations', 'no_of_previous_bookings_not_canceled', 'avg_price_per_room', 'no_of_special_requests', 'booking_status']
X = df.loc[:, features]
y = df.loc[:, ['booking_status']]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)

from sklearn.linear_model import LogisticRegression
from sklearn import metrics

# Create an instance of the LogisticRegression model
model = LogisticRegression()

# Train the model
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
print('Accuracy of logistic regression classifier on test set: {:.2f}'.format(model.score(X_test, y_test)))